#!/usr/bin/env bash
#
# lddsafe - Safely print shared library dependencies (similar to ldd).
# Author: Ricardo Garcia Gonzalez.
# Author: Ivan Mironov.
# License: Public domain code.
#

# Better for grep and expected output of other tools.
export LANG=C

# Print error and exit.
die()
{
	echo "ERROR: $1" 1>&2
	exit 1
}

# Find required program.
findexec()
{
	which "$1" 2>/dev/null || die "$1 not found"
}

# Check file exists and is executable.
checkexec()
{
	[ -x "$1" ] || die "$1 missing or not executable"
}

# Check file exists and is readable.
checkreadable()
{
	[ -r "$1" ] || die "$1 missing or not readable"
}

# Check for bash version.
[ -n "$BASH_VERSION" ] || die "Bash required"
[ ${BASH_VERSINFO[0]} -ge 4 ] || die "Bash version 4 or later required"

# Check needed programs.
findexec which >/dev/null
OBJDUMP=$( findexec objdump )
READELF=$( findexec readelf )
CAT=$( findexec cat )
TR=$( findexec tr )
SED=$( findexec sed )

# Check needed files.
checkreadable /etc/ld.so.conf

# Check arguments.
[ "$1" == "-n" ] && recursive=0 || recursive=1
[ "$1" == "-n" ] && shift
if [ $# -eq 0 ]; then
	echo "Usage: $( basename $0 ) [-n] FILE..." 2>&1
	exit 1
fi
for arg in "$@"; do
	checkexec "$1"
done

# Additional library directories.
morelibdirs="$( $CAT /etc/ld.so.conf && \
		$TR : ' ' <<<$LD_LIBRARY_PATH )"

# Search for a given library name.
searchlib()
{
	found=0
	for libdir in $libdirs; do
		path="$libdir"/"$1"
		if [ -x "$path" ]; then
			found=1
			break
		fi
	done
	[ $found -eq 1 ] && echo "$path"
}

# Already visited libraries.
declare -A visitedlibs

# Print dependency results, recursively.
recursivedeps()
{
	for lib in $( $OBJDUMP -p "$1" | \
			$SED -n 's,^ *NEEDED \+\([^ ]\+\) *$,\1,p' ); do
		if [ ! "${visitedlibs[$lib]}" ]; then
			visitedlibs["$lib"]=1
			file=`searchlib "$lib"`
			if [ "$file" ]; then
				echo "	$lib => $file"
				[ $recursive -eq 1 ] && recursivedeps "$file"
			else
				echo "	$lib => not found"
			fi
		fi
	done
}

# Search symbol names in library directories.
for arg in "$@"; do
	# Print file name when more than one file given.
	[ $# -gt 1 ] && echo "${arg}:"

	# Set appropriate library search directories.
	class=$( $READELF -h $arg 2>/dev/null | \
		 $SED -n 's/^[ \t]*Class:[\ \t]\+\(.\+\)/\1/p' )
	if [ -z "$class" ]; then
		echo "$arg: not an ELF file" 2>&1
		continue
	fi
	if [ $class != ELF32 -a $class != ELF64 ]; then
		echo "$arg: unknown ELF format" 2>&1
		continue
	fi
	if [ $class == ELF64 ]; then
		if [ -d /lib64 ]; then
			stdlibs="/lib64 /usr/lib64"
		else
			stdlibs="/lib /usr/lib"
		fi
	else # $class == ELF32
		if [ -d /lib32 ]; then
			stdlibs="/lib32 /usr/lib32"
		else
			stdlibs="/lib /usr/lib"
		fi
	fi
	libdirs="$stdlibs $morelibdirs"

	# Get a unique list of library dependencies for this argument.
	unset visitedlibs
	declare -A visitedlibs
	recursivedeps "$arg"
done
exit 0
